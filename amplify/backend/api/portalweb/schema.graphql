# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Todo @model {
  id: ID!
  name: String!
  description: String,
  sortNumber: Int
}

type Accounts @model {
  id: ID!
  account_id: String
  sub: String
  status: Int
  user_name: String
}

type Associate @model {
  id: ID!
  associate_id: String
  account_id: String
  invite_key: String
  company_group_cd: String
  status: Int
  delete: Int
}

type Staff @model {
  id: ID!
  staff_id: String
  associate_id: String
  company_cd: String
  company_group_cd: String
  invite_key: String
  status: Int
  delete: Int
}

type StaffRole @model {
  id: ID!
  role_cd: String
  staff_id: String
  company_cd: String
  status: Int
  delete: Int
}

type Employee @model {
  id: ID!
  company_employee_id: String
  staff_id: String
  company_cd: String
  last_name: String
  first_name: String
  last_name_kana: String
  first_name_kana: String
  gender: Int
  birth: String
  employee_number: String
  permanent: Int
  official_position: String
  delete: Int
  status: Int
}

type Company @model {
  id: ID!
  company_cd: String
  company_name: String
  company_name_kana: String
  company_form: Int
  form_name_position: Int
  homepage_url: String
  membership: Int
  certified: Int
  status: Int
  delete: Int
}

type Invitation @model {
  id: ID!
  company_cd: String
  shop_cd: String
  role_cd: String
  employee_id: String
  send_type: Int
  expired_in: Int
  approval: Int
  invitation_id: String
  send_to: String
  url: String
}

type Brand @model {
  id: ID!
  company_brand_cd: String
  brand_name: String
  brand_cd: String
  exchange_time: String
  company_cd: String
  status: Int
  delete: Int
}

type Area @model {
  id: ID!
  company_area_cd: String
  area_cd: String
  area_name: String
  company_cd: String
  status: Int
  delete: Int
}

type Position @model {
  id: ID!
  company_position_cd: String
  company_cd: String
  position_cd: String
  status: Int
  delete: Int
}

type StaffPosition @model {
  id: ID!
  staff_position_id: String
  position_cd: String
  staff_id: String
  company_cd: String
  status: Int
  delete: Int
}

type Shop @model {
  id: ID!
  company_shop_cd: String
  shop_cd: String
  address: String
  area_cd: String
  brand_cd: String
  company_cd: String
  shop_name_kana: String
  shop_name: String
  phone: String
  is_head: Int
  francisee_id: String
  status: Int
  delete: Int
}

type ShopTime @model {
  id: ID!
  shop_time_id: String
  company_shop_cd: String
  day_cd: String
  holiday: Int
  start_time: String
  end_time: String
  status: Int
}

type ShopStaff @model {
  id: ID!
  shop_staff_id: String
  company_shop_cd: String
  staff_id: String
  status: Int
  delete: Int
}

type ShopStaffGroup @model {
  id: ID!
  staff_group_cd: String
  company_shop_cd: String
  group_name: String
  staff_id: String
}

type ShopStaffGroupStaff @model {
  id: ID!
  staff_group_cd: String
  shop_staff_id: String
}

type Role @model {
  id: ID!
  role_cd: String
  role_name: String
}
type Policy @model {
  id: ID!
  func_cd: String
  crud: String
}
type FileDirTop @model {
  id: ID!
  organization_id: String
  function_cd: String
  dir_id: String
  company_id: String
}
type FileDir @model {
  id: ID!
  dir_id: String
  dir_name: String
  parent_dir_id: String
  permission: Int
}
type FileStore @model {
  id: ID!
  company_cd: String
  dir_id: String
  function_cd: String
  file_name: String
  file_size: String
  owner_id: String
  data_url: String
  store_type: Int
  status: Int
  delete: Int
}
type Forum @model {
  id: ID!
  forum_id: String
  forum_name: String
  company_cd: String
  company_group_cd: String
  owner_id: String
}
type ForumPost @model {
  id: ID!
  post_key: String
  forum_id: String
  title: String
  post_text: String
  attached: Int
  url_links: Int
  status: Int
  importance: Int
  delete: Int
}
type ForumFile @model {
  id: ID!
  post_key: String
  sort_number: String
  file_id: String
  data_url: String
}
type ForumUrl @model {
  id: ID!
  post_key: String
  sort_number: String
  url_key: String
  url_value: String
}
type Chat @model {
  id: ID!
  chat_id: String
  chat_name: String
  company_cd: String
  company_group_cd: String
  owner_id: String
}
type ChatRoom @model {
  id: ID!
  room_id: String
  room_name: String
  room_type: Int
  send_notice: Int
  owner_staff_id: String
  delete: Int
}
type ChatRoomMember @model {
  id: ID!
  room_id: String
  member_id: String
  send_notice: Int
  room_name: String
  ignore: Int
  last_access: String
}
type ChatPost @model {
  id: ID!
  chat_key: String
  room_id: String
  attached: Int
  post_text: String
  url_links: Int
  poster_ids: String
  mentions: String
  delete: Int
}
type ChatFile @model {
  id: ID!
  chat_key: String
  sort_number: String
  file_id: String
  data_url: String
}
type ChatUrl @model {
  id: ID!
  chat_key: String
  sort_number: String
  url_key: String
  url_value: String
}